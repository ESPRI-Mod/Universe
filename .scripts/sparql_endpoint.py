#from rdflib import Graph,ConjunctiveGraph
from rdflib_endpoint import SparqlRouter
from poc_repo_api.code.onRepoChange.generate_graph import get_graph

#g = ConjunctiveGraph()


#g.parse("/home/ltroussellier/Bureau/dev/POC_repo_api/src/poc_repo_api/code/_generated/temp.ttl")

#print(g)
# test_json="""
#
# {
#   "id": "ipsl",
#   "cmip_acronym": "IPSL",
#   "rorIdentifier": "02haar591",
#   "name": "Institut Pierre-Simon Laplace",
#   "url": [
#     "https://www.ipsl.fr/en/"
#   ],
#   "established": 1991,
#   "type": "Facility",
#   "labels": [],
#   "aliases": [
#     "Ipsl"
#   ],
#   "acronyms": [
#     "IPSL"
#   ],
#   "location": {
#     "id": "02haar591",
#     "lat": 48.855675,
#     "lon": 2.332105,
#     "city": "Paris",
#     "country": [
#       "France",
#       "FR"
#     ]
#   },
#   "@context": {
#     "comments": {
#       "description": "Auto generated by LinkML jsonld context generator",
#       "generation_date": "2024-07-03T15:39:03",
#       "source": "institution.yaml"
#     },
#     "@context": {
#       "esvocab": "http://127.0.0.1:8000/uri/",
#       "institution": "http://127.0.0.1:8000/uri/institution/",
#       "linkml": "https://w3id.org/linkml/",
#       "rdf": {
#         "@id": "http://www.w3.org/1999/02/22-rdf-syntax-ns",
#         "@prefix": true
#       },
#       "ror": "https://ror.org/",
#       "schema": "http://schema.org/",
#       "@vocab": "http://127.0.0.1:8000/uri/",
#       "acronyms": {
#         "@id": "institution:acronyms"
#       },
#       "aliases": {
#         "@id": "schema:alternateName"
#       },
#       "cmip_acronym": {
#         "@id": "cmip_acronym"
#       },
#       "established": {
#         "@type": "xsd:integer",
#         "@id": "schema:foundingDate"
#       },
#       "id": "@id",
#       "labels": {
#         "@id": "labels"
#       },
#       "location": {
#         "@type": "@id",
#         "@id": "schema:location"
#       },
#       "name": {
#         "@id": "name"
#       },
#       "rorIdentifier": {
#         "@id": "ror:id"
#       },
#       "type": {
#         "@id": "type"
#       },
#       "url": {
#         "@id": "url"
#       },
#       "validation_method": {
#         "@id": "institution:validation_method"
#       },
#       "city": {
#         "@id": "city"
#       },
#       "country": {
#         "@id": "country"
#       },
#       "lat": {
#         "@type": "xsd:float",
#         "@id": "lat"
#       },
#       "lon": {
#         "@type": "xsd:float",
#         "@id": "lon"
#       },
#       "@base": "http://127.0.0.1:8000/uri/",
#       "Institution": {
#         "@id": "institution"
#       },
#       "Location": {
#         "@id": "schema:location"
#       }
#     }
#   }
# }
#
#
# """
# g = Graph().parse(data=test_json, format='json-ld')
#
g = get_graph()


sparql_router = SparqlRouter(
    graph=g,
    path="/sparql/",
    # Metadata used for the SPARQL service description and Swagger UI:
    title="SPARQL endpoint for RDFLib graph",
    description="A SPARQL endpoint to serve machine learning models, or any other logic implemented in Python. \n[Source code](https://github.com/vemonet/rdflib-endpoint)",
    version="0.1.0",
    public_url='https://127.0.0.1/',
)
